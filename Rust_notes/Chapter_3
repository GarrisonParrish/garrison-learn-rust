____CHAPTER THREE _______________________________________________________________________
Common Programming Concepts

Some keywords have no associated functionality, but are reserved for potential future changes (wtf)
	-> Cannot be used as identifiers

Variables and Immutability-----------

Variables are immutable by default
let x = 5;
	-> x is immutable, value can't be changed

let mut x = 5;
	-> x is mutable, value can be changed

Constants are always immutable
	-> must be declared with const, not let
	-> cannot use mut keyword
	-> can be declared in any scope (including global)

The catch: constants can only be set to a CONSTANT expression, not the result of a computation that happens at runtime

	ex:		const THREE_HOURS_IN_SECONDS: u32 = 60 * 60 * 3;
	list of valid expressions:	https://doc.rust-lang.org/reference/const_eval.html

Shadowing - declaring a variable with the same name as another in scope "shadows" the previous variable
	-> the first variable is shadowed by the second

We can use shadowing on an immutable variable to control when its value can be changed
	-> define an inner scope with brackets and make a new let statement within
	-> closing bracket ends the inner scope, and the value reverts
	-> only a let statement can change the value of an immutable variable by shadowing its old value

shadowing is effectively creating a new variable, which means we can use a different type with the same name

Data Types---------

Two subsets: scalar and compound